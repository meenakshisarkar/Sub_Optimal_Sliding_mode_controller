   function optimal_control_unconstrained
clc;clear all;
M=[539 0 0 0 5.88 0;
    0 1326 0 -5.88 0 0;       %mass matrix..
    0 0 1326 0 0 0;
    0 -5.88 0 17.1 0 0;
    5.88 0 0 0 1836 0;
    0 0 0 0 0 1834] ;
u=sym('u',[6,1]);
f=sym('f',[6,1]);
P=sym('P',[6,1]);
x=sym('x',[6,1]);
%  u=[u(1);u(2);u(3);u(4);u(5);u(6)];
C=[0 0 0 0 1326*u(6) -1326*u(6)+5.88*u(4);
0 0 0 -1326*u(3) 0 (539*u(1)+5.88*u(5));                  %corriolis co-efficient
0 0 0 1326*u(2)-5.88*u(4) (-539*u(1)-5.88*u(5)) 0;
0 1326*u(3) (-1326*u(2)+5.88*u(4)) 0 1834*u(6) (-1836*u(5)-5.88*u(1));
-1326*u(3) 0 (539*u(1) +5.88*u(5))  -1834*u(6) 0 (17.1*u(4)-5.88*u(2));
(1326*u(2)-5.88*u(4)) (-539*u(1)-5.88*u(5)) 0 (1836*u(5)+5.88*u(1))  (-17.1*u(4)+5.88*u(2)) 0];

D=[-120*abs(u(1)) 0 0 0 0 0;
    0 -1224*abs(u(2)) 0 0 0 0;               %damping co-efficients
    0 0 -1224*abs(u(3)) 0 0 0;
    0 0 0 0*abs(u(4)) 0 0;
    0 0 0 0 -2731*abs(u(5)) 0;
    0 0 0 0 0 -2731*abs(u(6))];

G=[0;0;0;cos(x(5))*sin(x(4))*490*9.81*0.0616;sin(x(5))*490*9.81*0.0616;0];   %co-efficients due to gravity.

B=[1 0 0 0 0 0;
    0 1 0 0 0 0;                                              %thruster mapping matrix.
    0 0 1 0 0 0;                      
    0 0 0 0 0 0;
    0 0 0 0 1 0;
    0 0 0 0 0 1];

sys=(M)\(B*f-G-D*u-C*u)                                     %system equations.
alpha=ones(6,1);

%display(sys);
temp1=transpose(P)*(M\(B*f));
display(temp1);


%-------------solve the system of equations for geting the necessary
%conditions for optimality------------------------------------------%

%we solve the syetem of PDE's from dH/df=0

a1=1;                                  % co-efficients for the cost fuction according to different weitage to different thrusters.
a2=1;
a3=1;
a4=1;
a5=1;
a6=1;
syms f1 f2 f3 f4 f5 f6 P1 P2 P3 P4 P5 P6;
S1=solve('1.5*1*f1^.5+(127500*P1)/68720099 - (25*P5)/4207353=0',f1);%,'1.5*1*f2^.5+(2375*P2)/3144448 + (1225*P4)/4716672=0',' 1.5*1*f3^.5+P3/1326=0',...
    %'1.5*1*f4^.5+0=0','1.5*1*f5^.5+(6875*P5)/12622059 - (25*P1)/4207353=0','1.5*1*f6^.5+P6/1834=0');%,f1,f2,f3,f4,f5,f6);

S2=solve('1.5*1*f2^.5+(2375*P2)/3144448 + (1225*P4)/4716672=0',f2);
S3=solve('1.5*1*f3^.5+P3/1326=0');
S4=solve('1.5*1*f4^.5+0=0');
S5=solve('1.5*1*f5^.5+(6875*P5)/12622059 - (25*P1)/4207353=0');
S6=solve('1.5*1*f6^.5+P6/1834=0');
% display(S.f1);
% display(S.f2);
% display(S.f3);
% display(S.f4);
% display(S.f5);
% display(S.f6);




%--------------------------------------finding the other conditions for
%optimality from the equation of dp/dt=dh/dx---------------------------%


P2=sym('P2_',[6,1]);
P1=sym('P1_',[6,1]);
temp2=transpose(P2)*(M\G)
dP1_1=diff(temp2,x(1));
dP1_2=diff(temp2,x(2));
dP1_3=diff(temp2,x(3));
dP1_4=diff(temp2,x(4));
dP1_5=diff(temp2,x(5));
dP1_6=diff(temp2,x(6));

temp3=transpose(P1)*u+transpose(P2)*(sys);
dP2_1=diff(temp3,u(1));
dP2_2=diff(temp3,u(2));
dP2_3=diff(temp3,u(3));
dP2_4=diff(temp3,u(4));
dP2_5=diff(temp3,u(5));
dP2_6=diff(temp3,u(6));

bratubvp();


function bratubvp

options = bvpset('stats','on');
solinit = bvpinit(linspace(0,1,1000),[0 0 0 0 0 0 .1 0 0 0 0 0 0 0 0 .1 .1 0 0 .1 .1 0 0 .1]);
sol1 = bvp4c(@bratuode,@bratubc,solinit,options);

fprintf('\n');

% Change the initial guess to converge to a different solution. 
% solinit = bvpinit(linspace(0,1,5),[3 0]);
% sol2 = bvp4c(@bratuode,@bratubc,solinit,options);

figure
plot(sol1.x,sol1.y(1,:));%,sol2.x,sol2.y(1,:))
%title('Bratu''s equation has two solutions when \lambda = 1.')
xlabel('x')
ylabel('y1')

% --------------------------------------------------------------------------

function [dydx] = bratuode(x,y)
%BRATUODE  ODE function for the exercise of Example 1 of the BVP tutorial.
dydx = [  y(7)
          y(8)
          y(9)
          y(10)
          y(11)
          y(12)
          ((127500*(0.0012369015941027675178407411782105*y(19) - 0.0000039613188307866410702089096557067*y(23))^2)/68720099 - (25*(0.0000039613188307866410702089096557067*y(19) - 0.00036312089282210876476915005177312*y(23))^2)/4207353 + (1233771*sin(y(5)))/701225500 - (19675*y(7)*y(10))/4207353 - (49*y(8)*y(12))/1402451 + (49*y(9)*y(11))/1402451 - (182645*y(10)*y(12))/8414706 - (169065000*y(11)*y(12))/68720099 + (15300000*y(7)*abs(y(7)))/68720099 - (68275*y(11)*abs(y(11)))/4207353 + (169065000*(y(12))^2)/68720099)
          (2375*(0.00050353299953865776547531819045293*y(20) + 0.00017314468054311740707572344794522*y(22))^2)/3144448 - (60454779*cos(y(5))*sin(y(4)))/786112000 - (1275323*y(7)*y(12))/3144448 + y(9)*y(10) - (36995*y(11)*y(12))/9433344 + (363375*y(8)*abs(y(8)))/393056
          (49*y(10)^2)/11050 - y(8)*y(10) + (49*y(11)^2)/11050 + (539*y(7)*y(11))/1326 + 0.00000025277285502642613812873772061067*(y(21))^2/1326 + (12*y(9)*abs(y(9)))/13
          (1225*(0.00050353299953865776547531819045293*y(20) + 0.00017314468054311740707572344794522*y(22))^2)/4716672 - (272663391*cos(y(5))*sin(y(4)))/15722240 + (964075*y(7)*y(12))/4716672 + (545297*y(11)*y(12))/4716672 + (62475*y(8)*abs(y(8)))/196528
          (6875*(0.0000039613188307866410702089096557067*y(19) - 0.00036312089282210876476915005177312*y(23))^2)/12622059 - (25*(0.0012369015941027675178407411782105*y(19) - 0.0000039613188307866410702089096557067*y(23))^2)/4207353 - (4523827*sin(y(5)))/28049020 + (5410625*y(7)*y(9))/12622059 + (13475*y(8)*y(12))/4207353 - (13475*y(9)*y(11))/4207353 + (24983257*y(10)*y(12))/25244118 + (11050*y(11)*y(12))/1402451 - (1000*y(7)*abs(y(7)))/1402451 + (18775625*y(11)*abs(y(11)))/12622059 - (11050*(y(12))^2)/1402451
          0.00000013213528909417427402559804101506*(y(24))^2/1834 - (787*y(7)*y(8))/1834 - (18189*y(10)*y(11))/18340 + (2731*y(12)*abs(y(12)))/1834
          0
          0
          0
         (60454779*y(20)*cos(y(4))*cos(y(5)))/786112000 + (272663391*y(22)*cos(y(4))*cos(y(5)))/15722240
         (4523827*y(23)*cos(y(5)))/28049020 - (1233771*y(19)*cos(y(5)))/701225500 - (60454779*y(20)*sin(y(4))*sin(y(5)))/786112000 - (272663391*y(22)*sin(y(4))*sin(y(5)))/15722240
          0
          y(13) - (1275323*y(20)*y(12))/3144448 + (539*y(21)*y(11))/1326 - (787*y(24)*y(8))/1834 + (964075*y(22)*y(12))/4716672 - y(23)*((1000*abs(y(7)))/1402451 - (5410625*y(9))/12622059 + (1000*y(7)*sign(y(7)))/1402451) + y(19)*((15300000*abs(y(7)))/68720099 - (19675*y(9))/4207353 + (15300000*y(7)*sign(y(7)))/68720099)
          y(14) + y(22)*((62475*abs(y(8)))/196528 + (62475*y(8)*sign(y(8)))/196528) + y(20)*((363375*abs(y(8)))/393056 + (363375*y(8)*sign(y(8)))/393056) - (49*y(19)*y(12))/1402451 - y(21)*y(10) - (787*y(24)*y(7))/1834 + (13475*y(23)*y(12))/4207353
          y(15) + y(21)*((12*abs(y(9)))/13 + (12*y(9)*sign(y(9)))/13) + y(20)*y(10) - y(19)*((19675*y(7))/4207353 - (49*y(11))/1402451) + y(23)*((5410625*y(7))/12622059 - (13475*y(11))/4207353)
          y(16) + y(20)*y(9) - (182645*y(19)*y(12))/8414706 + (24983257*y(23)*y(12))/25244118 - (18189*y(24)*y(11))/18340 - y(21)*(y(8) - (49*y(10))/5525)
          (y(17) - (36995*y(20)*y(12))/9433344 + (545297*y(22)*y(12))/4716672 - (18189*y(24)*y(10))/18340 + y(23)*((11050*y(12))/1402451 - (13475*y(9))/4207353 + (18775625*abs(y(11)))/12622059 + (18775625*y(11)*sign(y(11)))/12622059) + y(21)*((539*y(7))/1326 + (49*y(11))/5525) - y(19)*((169065000*y(12))/68720099 - (49*y(9))/1402451 + (68275*abs(y(11)))/4207353 + (68275*y(11)*sign(y(11)))/4207353))
          (y(18) + y(24)*((2731*abs(y(12)))/1834 + (2731*y(12)*sign(y(12)))/1834) + y(23)*((13475*y(8))/4207353 + (24983257*y(10))/25244118 + (11050*y(11))/1402451 - (22100*y(12))/1402451) - y(19)*((49*y(8))/1402451 + (182645*y(10))/8414706 + (169065000*y(11))/68720099 - (338130000*y(12))/68720099) + y(22)*((964075*y(7))/4716672 + (545297*y(11))/4716672) - y(20)*((1275323*y(7))/3144448 + (36995*y(11))/9433344))];
          
           
          
          
% --------------------------------------------------------------------------

function res = bratubc(ya,yb)
%BRATUBC  Boundary conditions for the exercise of Example 1 of the BVP tutorial.
res = [ya(1)
       ya(2)
       ya(3)
       ya(4)
       ya(5)
       ya(6)
       ya(7)
       ya(8)
       ya(9)
       ya(10)
       ya(11)
       ya(12)
       yb(1)-10
       yb(2)
       yb(3)
       yb(4)
       yb(5)
       yb(6)
       yb(7)-5
       yb(8)
       yb(9)
       yb(10)
       yb(11)
       yb(12)
       ];





